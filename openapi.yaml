openapi: 3.1.0
info:
  title: Bimhd API
  description: |-
    Bimhd API is a RESTful API that allows you to interact with the public transport data in Bratislava.

    Authors: Martin Hric, Adam Hlad√≠k
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://rust.hldks.net/api/v1
    description: testing server
  - url: http://localhost:8000/api/v1
    description: local server
paths:
  /stops:
    get:
      summary: Retrieves transit stops
      description: Fetches a list of all transit stops or searches by stop name if a query parameter is provided.
      parameters:
        - in: query
          name: stop_name
          schema:
            type: string
          required: false
          description: Name of the stop to filter the results.
      responses:
        200:
          description: An array of stops and the time taken to fetch them.
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_taken:
                    type: string
                  stops:
                    type: array
                    items:
                      $ref: '#/components/schemas/Stop'

  /stops/nearest:
    get:
      summary: Retrieves nearest stops based on geographic coordinates
      description: Returns the nearest stops from the given longitude and latitude.
      parameters:
        - in: query
          name: lon
          schema:
            type: number
            format: double
          required: true
          description: Longitude of the location.
        - in: query
          name: lat
          schema:
            type: number
            format: double
          required: true
          description: Latitude of the location.
        - in: query
          name: max
          schema:
            type: integer
          required: false
          description: Maximum number of stops to return.
      responses:
        200:
          description: An array of the nearest stops.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stop'
        400:
          description: Bad request if the longitude or latitude parameters are missing or invalid.       
  /stops/routes/departures:
    get:
      summary: Retrieves departure routes for a specified stop
      description: Returns routes departing from the specified stop along with their destinations.
      parameters:
        - in: query
          name: stop_name
          schema:
            type: string
          required: true
          description: The stop name to fetch departure routes for.
      responses:
        200:
          description: A list of departure routes and possible destinations from the given stop.
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_taken:
                    type: string
                  possibilities:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
        400:
          description: Invalid request due to missing or incorrect stop name.
  /trip:
    get:
      summary: Calculates a trip from one stop to another at a specified time
      description: Returns route details between two stops including trip times and stops along the route.
      parameters:
        - in: query
          name: from
          schema:
            type: string
          required: true
          description: The starting stop name.
        - in: query
          name: to
          schema:
            type: string
          required: true
          description: The destination stop name.
        - in: query
          name: time_at
          schema:
            type: string
            pattern: '^[0-2]?[0-9]:[0-5][0-9]$'
          required: false
          description: Desired departure time in HH:MM format.
      responses:
        200:
          description: Route details including departure and arrival times.
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_taken:
                    type: string
                  departure_at:
                    type: string
                  arrival_at:
                    type: string
                  trips:
                    type: array
                    items:
                      $ref: '#/components/schemas/TripDetail'
        404:
          description: No route found between the given stops.

components:
  schemas:
    Stop:
      type: object
      properties:
        stop_name:
          type: string
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/Platform'
    Platform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    TripDetail:
      type: object
      properties:
        departure_at:
          type: string
        arrival_at:
          type: string
        trip_id:
          type: string
        duration:
          type: string
        route:
          type: string
        stop_names:
          type: array
          items:
            type: string